class Solution {
    static {
        for (int i = 0; i < 500; i++) {
            reorderList(new ListNode(0,null));
        }
    }

    public static void reorderList(ListNode head){
        
        //find mid, stop slow before mid
        ListNode slow = head;
        ListNode fast = head;

        while (fast.next!=null && fast.next.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }

        //reverse at slow.next
        ListNode newHead = reverse(slow.next);

        slow.next = null; //remove the cycle

        ListNode ptr1 = head;
        ListNode ptr2 = newHead;
        ListNode next1 = null;
        ListNode next2 = null;

        //reorder 
        while(ptr2!=null){ //list 2 is smaller or equal
            next1 = ptr1.next;
            ptr1.next = ptr2;
            next2 = ptr2.next;
            ptr2.next = next1;
            ptr1 = next1;
            ptr2 = next2;
        }
    }
 
    public static ListNode reverse(ListNode head){
        ListNode pre = null;
        ListNode curr = head;
        while (curr!=null){
            ListNode temp = curr.next;
            curr.next = pre;
            pre = curr;
            curr = temp;
        }
        return pre;
    }
}
